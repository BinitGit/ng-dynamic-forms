{"version":3,"file":"ui-foundation.umd.min.js","sources":["../../../es5/ui-foundation/src/checkbox/dynamic-foundation-checkbox.component.ts","../../../es5/ui-foundation/src/form-array/dynamic-foundation-form-array.component.ts","../../../es5/ui-foundation/src/form-group/dynamic-foundation-form-group.component.ts","../../../es5/ui-foundation/src/input/dynamic-foundation-input.component.ts","../../../es5/ui-foundation/src/radio-group/dynamic-foundation-radio-group.component.ts","../../../es5/ui-foundation/src/select/dynamic-foundation-select.component.ts","../../../es5/ui-foundation/src/switch/dynamic-foundation-switch.component.ts","../../../es5/ui-foundation/src/textarea/dynamic-foundation-textarea.component.ts","../../../es5/ui-foundation/src/dynamic-foundation-form-control-container.component.ts","../../../es5/ui-foundation/src/dynamic-foundation-form.component.ts","../../../es5/ui-foundation/src/dynamic-foundation-form-ui.module.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DynamicCheckboxModel,\r\n    DynamicFormControlComponent,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-foundation-checkbox\",\r\n    templateUrl: \"./dynamic-foundation-checkbox.component.html\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicFoundationCheckboxComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicCheckboxModel;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { Component, EventEmitter, Input, Output, QueryList } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DynamicFormArrayComponent,\r\n    DynamicFormArrayModel,\r\n    DynamicFormControlCustomEvent,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicTemplateDirective\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-foundation-form-array\",\r\n    templateUrl: \"./dynamic-foundation-form-array.component.html\"\r\n})\r\nexport class DynamicFoundationFormArrayComponent extends DynamicFormArrayComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicFormArrayModel;\r\n    @Input() templates: QueryList<DynamicTemplateDirective> | undefined;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { Component, EventEmitter, Input, Output, QueryList } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DynamicFormControlComponent,\r\n    DynamicFormControlCustomEvent,\r\n    DynamicFormGroupModel,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicTemplateDirective\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-foundation-form-group\",\r\n    templateUrl: \"./dynamic-foundation-form-group.component.html\"\r\n})\r\nexport class DynamicFoundationFormGroupComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicFormGroupModel;\r\n    @Input() templates: QueryList<DynamicTemplateDirective> | DynamicTemplateDirective[] | undefined;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DynamicFormControlComponent,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicInputModel\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-foundation-input\",\r\n    templateUrl: \"./dynamic-foundation-input.component.html\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicFoundationInputComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicInputModel;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DynamicFormControlComponent,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicRadioGroupModel\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-foundation-radio-group\",\r\n    templateUrl: \"./dynamic-foundation-radio-group.component.html\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicFoundationRadioGroupComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicRadioGroupModel<string>;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DynamicFormControlComponent,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicSelectModel,\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-foundation-select\",\r\n    templateUrl: \"./dynamic-foundation-select.component.html\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicFoundationSelectComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicSelectModel<string>;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DynamicFormControlComponent,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicSwitchModel\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-foundation-switch\",\r\n    templateUrl: \"./dynamic-foundation-switch.component.html\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicFoundationSwitchComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicSwitchModel;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DynamicFormControlComponent,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicTextAreaModel\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-foundation-textarea\",\r\n    templateUrl: \"./dynamic-foundation-textarea.component.html\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicFoundationTextAreaComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicTextAreaModel;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    ContentChildren,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    QueryList, Type, ViewChild, ViewContainerRef\r\n} from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DYNAMIC_FORM_CONTROL_TYPE_ARRAY,\r\n    DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX,\r\n    DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP,\r\n    DYNAMIC_FORM_CONTROL_TYPE_GROUP,\r\n    DYNAMIC_FORM_CONTROL_TYPE_INPUT,\r\n    DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP,\r\n    DYNAMIC_FORM_CONTROL_TYPE_SELECT,\r\n    DYNAMIC_FORM_CONTROL_TYPE_SWITCH,\r\n    DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA,\r\n    DynamicFormArrayGroupModel,\r\n    DynamicFormControl,\r\n    DynamicFormControlContainerComponent,\r\n    DynamicFormControlEvent,\r\n    DynamicFormControlModel,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicTemplateDirective,\r\n} from \"@ng-dynamic-forms/core\";\r\nimport { DynamicFoundationTextAreaComponent } from \"./textarea/dynamic-foundation-textarea.component\";\r\nimport { DynamicFoundationSwitchComponent } from \"./switch/dynamic-foundation-switch.component\";\r\nimport { DynamicFoundationSelectComponent } from \"./select/dynamic-foundation-select.component\";\r\nimport { DynamicFoundationRadioGroupComponent } from \"./radio-group/dynamic-foundation-radio-group.component\";\r\nimport { DynamicFoundationInputComponent } from \"./input/dynamic-foundation-input.component\";\r\nimport { DynamicFoundationCheckboxComponent } from \"./checkbox/dynamic-foundation-checkbox.component\";\r\nimport { DynamicFoundationFormArrayComponent } from \"./form-array/dynamic-foundation-form-array.component\";\r\nimport { DynamicFoundationFormGroupComponent } from \"./form-group/dynamic-foundation-form-group.component\";\r\n\r\n@Component({\r\n    selector: \"dynamic-foundation-form-control\",\r\n    templateUrl: \"./dynamic-foundation-form-control-container.component.html\"\r\n})\r\nexport class DynamicFoundationFormControlContainerComponent extends DynamicFormControlContainerComponent {\r\n\r\n    @ContentChildren(DynamicTemplateDirective) contentTemplateList: QueryList<DynamicTemplateDirective>;\r\n    @Input(\"templates\") inputTemplateList: QueryList<DynamicTemplateDirective>;\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() context: DynamicFormArrayGroupModel | null = null;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicFormControlModel;\r\n\r\n    @Output() blur: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\r\n    @Output() change: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\r\n    @Output() focus: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\r\n\r\n    @ViewChild(\"componentViewContainer\", {read: ViewContainerRef}) componentViewContainerRef: ViewContainerRef;\r\n\r\n    constructor(protected componentFactoryResolver: ComponentFactoryResolver,\r\n                protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(componentFactoryResolver, layoutService, validationService);\r\n    }\r\n\r\n    get componentType(): Type<DynamicFormControl> | null {\r\n        return this.layoutService.getCustomComponentType(this.model) || foundationUIFormControlMapFn(this.model);\r\n    }\r\n}\r\n\r\nexport function foundationUIFormControlMapFn(model: DynamicFormControlModel): Type<DynamicFormControl> | null {\r\n\r\n    switch (model.type) {\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\r\n            return DynamicFoundationFormArrayComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:\r\n            return DynamicFoundationCheckboxComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\r\n            return DynamicFoundationFormGroupComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\r\n            return DynamicFoundationFormGroupComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_INPUT:\r\n            return DynamicFoundationInputComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:\r\n            return DynamicFoundationRadioGroupComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_SELECT:\r\n            return DynamicFoundationSelectComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_SWITCH:\r\n            return DynamicFoundationSwitchComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:\r\n            return DynamicFoundationTextAreaComponent;\r\n\r\n        default:\r\n            return null;\r\n    }\r\n}","import { Component, ContentChildren, EventEmitter, Input, Output, QueryList, ViewChildren } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DynamicFormComponent,\r\n    DynamicFormControlEvent,\r\n    DynamicFormControlModel,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormService,\r\n    DynamicTemplateDirective,\r\n} from \"@ng-dynamic-forms/core\";\r\nimport { DynamicFoundationFormControlContainerComponent } from \"./dynamic-foundation-form-control-container.component\";\r\n\r\n@Component({\r\n    selector: \"dynamic-foundation-form\",\r\n    templateUrl: \"./dynamic-foundation-form.component.html\"\r\n})\r\nexport class DynamicFoundationFormComponent extends DynamicFormComponent {\r\n\r\n    @Input(\"group\") formGroup: FormGroup;\r\n    @Input(\"model\") formModel: DynamicFormControlModel[];\r\n    @Input(\"layout\") formLayout: DynamicFormLayout;\r\n\r\n    @Output() blur: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\r\n    @Output() change: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\r\n    @Output() focus: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\r\n\r\n    @ContentChildren(DynamicTemplateDirective) templates: QueryList<DynamicTemplateDirective>;\r\n\r\n    @ViewChildren(DynamicFoundationFormControlContainerComponent) components: QueryList<DynamicFoundationFormControlContainerComponent>;\r\n\r\n    constructor(protected formService: DynamicFormService, protected layoutService: DynamicFormLayoutService) {\r\n        super(formService, layoutService);\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { TextMaskModule } from \"angular2-text-mask\";\r\nimport { DynamicFormsCoreModule } from \"@ng-dynamic-forms/core\";\r\nimport { DynamicFoundationFormControlContainerComponent } from \"./dynamic-foundation-form-control-container.component\";\r\nimport { DynamicFoundationFormComponent } from \"./dynamic-foundation-form.component\";\r\nimport { DynamicFoundationCheckboxComponent } from \"./checkbox/dynamic-foundation-checkbox.component\";\r\nimport { DynamicFoundationRadioGroupComponent } from \"./radio-group/dynamic-foundation-radio-group.component\";\r\nimport { DynamicFoundationInputComponent } from \"./input/dynamic-foundation-input.component\";\r\nimport { DynamicFoundationSelectComponent } from \"./select/dynamic-foundation-select.component\";\r\nimport { DynamicFoundationSwitchComponent } from \"./switch/dynamic-foundation-switch.component\";\r\nimport { DynamicFoundationTextAreaComponent } from \"./textarea/dynamic-foundation-textarea.component\";\r\nimport { DynamicFoundationFormArrayComponent } from \"./form-array/dynamic-foundation-form-array.component\";\r\nimport { DynamicFoundationFormGroupComponent } from \"./form-group/dynamic-foundation-form-group.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        TextMaskModule,\r\n        DynamicFormsCoreModule\r\n    ],\r\n    declarations: [\r\n        DynamicFoundationCheckboxComponent,\r\n        DynamicFoundationFormArrayComponent,\r\n        DynamicFoundationFormGroupComponent,\r\n        DynamicFoundationInputComponent,\r\n        DynamicFoundationRadioGroupComponent,\r\n        DynamicFoundationSelectComponent,\r\n        DynamicFoundationSwitchComponent,\r\n        DynamicFoundationTextAreaComponent,\r\n        DynamicFoundationFormControlContainerComponent,\r\n        DynamicFoundationFormComponent\r\n    ],\r\n    entryComponents: [\r\n        DynamicFoundationCheckboxComponent,\r\n        DynamicFoundationFormArrayComponent,\r\n        DynamicFoundationFormGroupComponent,\r\n        DynamicFoundationInputComponent,\r\n        DynamicFoundationRadioGroupComponent,\r\n        DynamicFoundationSelectComponent,\r\n        DynamicFoundationSwitchComponent,\r\n        DynamicFoundationTextAreaComponent\r\n    ],\r\n    exports: [\r\n        DynamicFormsCoreModule,\r\n        DynamicFoundationFormControlContainerComponent,\r\n        DynamicFoundationFormComponent\r\n    ]\r\n})\r\nexport class DynamicFormsFoundationUIModule {\r\n}"],"names":["layoutService","validationService","_super","_this","EventEmitter","__extends","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","DynamicFormLayoutService","DynamicFormValidationService","Input","Output","DynamicFormControlComponent","DynamicFormArrayComponent","componentFactoryResolver","Object","DynamicFoundationFormControlContainerComponent","this","getCustomComponentType","model","foundationUIFormControlMapFn","ComponentFactoryResolver","ContentChildren","DynamicTemplateDirective","ViewChild","read","ViewContainerRef","DynamicFormControlContainerComponent","type","DYNAMIC_FORM_CONTROL_TYPE_ARRAY","DynamicFoundationFormArrayComponent","DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX","DynamicFoundationCheckboxComponent","DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP","DYNAMIC_FORM_CONTROL_TYPE_GROUP","DynamicFoundationFormGroupComponent","DYNAMIC_FORM_CONTROL_TYPE_INPUT","DynamicFoundationInputComponent","DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP","DynamicFoundationRadioGroupComponent","DYNAMIC_FORM_CONTROL_TYPE_SELECT","DynamicFoundationSelectComponent","DYNAMIC_FORM_CONTROL_TYPE_SWITCH","DynamicFoundationSwitchComponent","DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA","DynamicFoundationTextAreaComponent","formService","DynamicFormService","ViewChildren","DynamicFormComponent","NgModule","imports","CommonModule","ReactiveFormsModule","TextMaskModule","DynamicFormsCoreModule","declarations","DynamicFoundationFormComponent","entryComponents","exports"],"mappings":"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"}