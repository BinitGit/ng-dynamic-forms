{"version":3,"file":"ui-ionic.umd.min.js","sources":["../../../es5/ui-ionic/src/checkbox/dynamic-ionic-checkbox.component.ts","../../../es5/ui-ionic/src/datetime/dynamic-ionic-datetime.component.ts","../../../es5/ui-ionic/src/form-array/dynamic-ionic-form-array.component.ts","../../../es5/ui-ionic/src/form-group/dynamic-ionic-form-group.component.ts","../../../es5/ui-ionic/src/input/dynamic-ionic-input.component.ts","../../../es5/ui-ionic/src/radio-group/dynamic-ionic-radio-group.component.ts","../../../es5/ui-ionic/src/range/dynamic-ionic-range.component.ts","../../../es5/ui-ionic/src/select/dynamic-ionic-select.component.ts","../../../es5/ui-ionic/src/textarea/dynamic-ionic-textarea.component.ts","../../../es5/ui-ionic/src/toggle/dynamic-ionic-toggle.component.ts","../../../es5/ui-ionic/src/dynamic-ionic-form-control-container.component.ts","../../../es5/ui-ionic/src/dynamic-ionic-form.component.ts","../../../es5/ui-ionic/src/dynamic-ionic-form-ui.module.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\r\nimport { Checkbox } from \"@ionic/angular\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DynamicCheckboxModel,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicFormControlComponent,\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-ionic-checkbox\",\r\n    templateUrl: \"./dynamic-ionic-checkbox.component.html\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicIonicCheckboxComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicCheckboxModel;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild(\"ionCheckbox\") ionCheckbox: Checkbox;\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Datetime } from \"@ionic/angular\";\r\nimport {\r\n    DynamicDatePickerModel,\r\n    DynamicFormControlCustomEvent,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicFormControlComponent\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-ionic-datetime\",\r\n    templateUrl: \"./dynamic-ionic-datetime.component.html\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicIonicDateTimeComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicDatePickerModel;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild(\"ionDatetime\") ionDatetime: Datetime;\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { Component, EventEmitter, Input, Output, QueryList } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DynamicFormArrayComponent,\r\n    DynamicFormArrayModel,\r\n    DynamicFormControlCustomEvent,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicTemplateDirective\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-ionic-form-array\",\r\n    templateUrl: \"./dynamic-ionic-form-array.component.html\"\r\n})\r\nexport class DynamicIonicFormArrayComponent extends DynamicFormArrayComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicFormArrayModel;\r\n    @Input() templates: QueryList<DynamicTemplateDirective> | undefined;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { Component, EventEmitter, Input, Output, QueryList } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DynamicFormControlComponent,\r\n    DynamicFormControlCustomEvent,\r\n    DynamicFormGroupModel,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicTemplateDirective\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-ionic-form-group\",\r\n    templateUrl: \"./dynamic-ionic-form-group.component.html\"\r\n})\r\nexport class DynamicIonicFormGroupComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicFormGroupModel;\r\n    @Input() templates: QueryList<DynamicTemplateDirective> | DynamicTemplateDirective[] | undefined;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() customEvent: EventEmitter<DynamicFormControlCustomEvent> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Input as IonInput } from \"@ionic/angular\";\r\nimport {\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicFormControlComponent,\r\n    DynamicInputModel\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-ionic-input\",\r\n    templateUrl: \"./dynamic-ionic-input.component.html\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicIonicInputComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicInputModel;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild(\"ionInput\") ionInput: IonInput;\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { RadioGroup } from \"@ionic/angular\";\r\nimport {\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicFormControlComponent,\r\n    DynamicRadioGroupModel\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-ionic-radio-group\",\r\n    templateUrl: \"./dynamic-ionic-radio-group.component.html\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicIonicRadioGroupComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicRadioGroupModel<string>;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild(\"ionRadioGroup\") ionRadioGroup: RadioGroup;\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Range } from \"@ionic/angular\";\r\nimport {\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicFormControlComponent,\r\n    DynamicSliderModel\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-ionic-range\",\r\n    templateUrl: \"./dynamic-ionic-range.component.html\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicIonicRangeComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicSliderModel;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild(\"ionRange\") ionRange: Range;\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Select } from \"@ionic/angular\";\r\nimport {\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicFormControlComponent,\r\n    DynamicSelectModel\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-ionic-select\",\r\n    templateUrl: \"./dynamic-ionic-select.component.html\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicIonicSelectComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicSelectModel<string>;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild(\"ionSelect\") ionSelect: Select;\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Textarea } from \"@ionic/angular\";\r\nimport {\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicFormControlComponent,\r\n    DynamicTextAreaModel\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-ionic-textarea\",\r\n    templateUrl: \"./dynamic-ionic-textarea.component.html\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicIonicTextAreaComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicTextAreaModel;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild(\"ionTextArea\") ionTextArea: Textarea;\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Toggle } from \"@ionic/angular\";\r\nimport {\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicFormControlComponent,\r\n    DynamicSwitchModel\r\n} from \"@ng-dynamic-forms/core\";\r\n\r\n@Component({\r\n    selector: \"dynamic-ionic-toggle\",\r\n    templateUrl: \"./dynamic-ionic-toggle.component.html\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicIonicToggleComponent extends DynamicFormControlComponent {\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicSwitchModel;\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n    @Output() change: EventEmitter<any> = new EventEmitter();\r\n    @Output() focus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ViewChild(\"ionToggle\") ionToggle: Toggle;\r\n\r\n    constructor(protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(layoutService, validationService);\r\n    }\r\n}","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    ContentChildren,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    QueryList,\r\n    Type, ViewChild, ViewContainerRef\r\n} from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DynamicFormArrayGroupModel,\r\n    DynamicFormControl,\r\n    DynamicFormControlContainerComponent,\r\n    DynamicFormControlEvent,\r\n    DynamicFormControlModel,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormValidationService,\r\n    DynamicTemplateDirective,\r\n    DYNAMIC_FORM_CONTROL_TYPE_ARRAY,\r\n    DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX,\r\n    DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP,\r\n    DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER,\r\n    DYNAMIC_FORM_CONTROL_TYPE_GROUP,\r\n    DYNAMIC_FORM_CONTROL_TYPE_INPUT,\r\n    DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP,\r\n    DYNAMIC_FORM_CONTROL_TYPE_SELECT,\r\n    DYNAMIC_FORM_CONTROL_TYPE_SLIDER,\r\n    DYNAMIC_FORM_CONTROL_TYPE_SWITCH,\r\n    DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA,\r\n    DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER\r\n} from \"@ng-dynamic-forms/core\";\r\nimport { DynamicIonicCheckboxComponent } from \"./checkbox/dynamic-ionic-checkbox.component\";\r\nimport { DynamicIonicDateTimeComponent } from \"./datetime/dynamic-ionic-datetime.component\";\r\nimport { DynamicIonicFormArrayComponent } from \"./form-array/dynamic-ionic-form-array.component\";\r\nimport { DynamicIonicFormGroupComponent } from \"./form-group/dynamic-ionic-form-group.component\";\r\nimport { DynamicIonicInputComponent } from \"./input/dynamic-ionic-input.component\";\r\nimport { DynamicIonicRadioGroupComponent } from \"./radio-group/dynamic-ionic-radio-group.component\";\r\nimport { DynamicIonicRangeComponent } from \"./range/dynamic-ionic-range.component\";\r\nimport { DynamicIonicSelectComponent } from \"./select/dynamic-ionic-select.component\";\r\nimport { DynamicIonicToggleComponent } from \"./toggle/dynamic-ionic-toggle.component\";\r\nimport { DynamicIonicTextAreaComponent } from \"./textarea/dynamic-ionic-textarea.component\";\r\n\r\n@Component({\r\n    selector: \"dynamic-ionic-form-control\",\r\n    templateUrl: \"./dynamic-ionic-form-control-container.component.html\"\r\n})\r\nexport class DynamicIonicFormControlContainerComponent extends DynamicFormControlContainerComponent {\r\n\r\n    @ContentChildren(DynamicTemplateDirective) contentTemplateList: QueryList<DynamicTemplateDirective>;\r\n    @Input(\"templates\") inputTemplateList: QueryList<DynamicTemplateDirective>;\r\n\r\n    @Input() bindId: boolean = true;\r\n    @Input() context: DynamicFormArrayGroupModel | null = null;\r\n    @Input() group: FormGroup;\r\n    @Input() layout: DynamicFormLayout;\r\n    @Input() model: DynamicFormControlModel;\r\n\r\n    @Output() blur: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\r\n    @Output() change: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\r\n    @Output() focus: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\r\n    @Output(\"ionEvent\") customEvent: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\r\n\r\n    @ViewChild(\"componentViewContainer\", {read: ViewContainerRef}) componentViewContainerRef: ViewContainerRef;\r\n\r\n    constructor(protected componentFactoryResolver: ComponentFactoryResolver,\r\n                protected layoutService: DynamicFormLayoutService,\r\n                protected validationService: DynamicFormValidationService) {\r\n\r\n        super(componentFactoryResolver, layoutService, validationService);\r\n    }\r\n\r\n    get componentType(): Type<DynamicFormControl> | null {\r\n        return this.layoutService.getCustomComponentType(this.model) || ionicUIFormControlMapFn(this.model);\r\n    }\r\n}\r\n\r\nexport function ionicUIFormControlMapFn(model: DynamicFormControlModel): Type<DynamicFormControl> | null {\r\n\r\n    switch (model.type) {\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\r\n            return DynamicIonicFormArrayComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:\r\n            return DynamicIonicCheckboxComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\r\n            return DynamicIonicFormGroupComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:\r\n            return DynamicIonicDateTimeComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\r\n            return DynamicIonicFormGroupComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_INPUT:\r\n            return DynamicIonicInputComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:\r\n            return DynamicIonicRadioGroupComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_SELECT:\r\n            return DynamicIonicSelectComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_SLIDER:\r\n            return DynamicIonicRangeComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_SWITCH:\r\n            return DynamicIonicToggleComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:\r\n            return DynamicIonicTextAreaComponent;\r\n\r\n        case DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:\r\n            return DynamicIonicDateTimeComponent;\r\n\r\n        default:\r\n            return null;\r\n    }\r\n}","import { Component, ContentChildren, EventEmitter, Input, Output, QueryList, ViewChildren } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    DynamicFormComponent,\r\n    DynamicFormControlEvent,\r\n    DynamicFormControlModel,\r\n    DynamicFormLayout,\r\n    DynamicFormLayoutService,\r\n    DynamicFormService,\r\n    DynamicTemplateDirective,\r\n} from \"@ng-dynamic-forms/core\";\r\nimport { DynamicIonicFormControlContainerComponent } from \"./dynamic-ionic-form-control-container.component\";\r\n\r\n@Component({\r\n    selector: \"dynamic-ionic-form\",\r\n    templateUrl: \"./dynamic-ionic-form.component.html\"\r\n})\r\nexport class DynamicIonicFormComponent extends DynamicFormComponent {\r\n\r\n    @Input(\"group\") formGroup: FormGroup;\r\n    @Input(\"model\") formModel: DynamicFormControlModel[];\r\n    @Input(\"layout\") formLayout: DynamicFormLayout;\r\n\r\n    @Output() blur: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\r\n    @Output() change: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\r\n    @Output() focus: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\r\n    @Output(\"ionEvent\") customEvent: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\r\n\r\n    @ContentChildren(DynamicTemplateDirective) templates: QueryList<DynamicTemplateDirective>;\r\n\r\n    @ViewChildren(DynamicIonicFormControlContainerComponent) components: QueryList<DynamicIonicFormControlContainerComponent>;\r\n\r\n    constructor(protected formService: DynamicFormService, protected layoutService: DynamicFormLayoutService) {\r\n        super(formService, layoutService);\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { TextMaskModule } from \"angular2-text-mask\";\r\nimport { DynamicFormsCoreModule } from \"@ng-dynamic-forms/core\";\r\nimport { DynamicIonicFormControlContainerComponent } from \"./dynamic-ionic-form-control-container.component\";\r\nimport { DynamicIonicFormComponent } from \"./dynamic-ionic-form.component\";\r\nimport { DynamicIonicCheckboxComponent } from \"./checkbox/dynamic-ionic-checkbox.component\";\r\nimport { DynamicIonicDateTimeComponent } from \"./datetime/dynamic-ionic-datetime.component\";\r\nimport { DynamicIonicFormArrayComponent } from \"./form-array/dynamic-ionic-form-array.component\";\r\nimport { DynamicIonicFormGroupComponent } from \"./form-group/dynamic-ionic-form-group.component\";\r\nimport { DynamicIonicInputComponent } from \"./input/dynamic-ionic-input.component\";\r\nimport { DynamicIonicRadioGroupComponent } from \"./radio-group/dynamic-ionic-radio-group.component\";\r\nimport { DynamicIonicRangeComponent } from \"./range/dynamic-ionic-range.component\";\r\nimport { DynamicIonicSelectComponent } from \"./select/dynamic-ionic-select.component\";\r\nimport { DynamicIonicTextAreaComponent } from \"./textarea/dynamic-ionic-textarea.component\";\r\nimport { DynamicIonicToggleComponent } from \"./toggle/dynamic-ionic-toggle.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        IonicModule,\r\n        TextMaskModule,\r\n        DynamicFormsCoreModule\r\n    ],\r\n    declarations: [\r\n        DynamicIonicCheckboxComponent,\r\n        DynamicIonicDateTimeComponent,\r\n        DynamicIonicFormArrayComponent,\r\n        DynamicIonicFormGroupComponent,\r\n        DynamicIonicInputComponent,\r\n        DynamicIonicRadioGroupComponent,\r\n        DynamicIonicRangeComponent,\r\n        DynamicIonicSelectComponent,\r\n        DynamicIonicTextAreaComponent,\r\n        DynamicIonicToggleComponent,\r\n        DynamicIonicFormControlContainerComponent,\r\n        DynamicIonicFormComponent\r\n    ],\r\n    entryComponents: [\r\n        DynamicIonicCheckboxComponent,\r\n        DynamicIonicDateTimeComponent,\r\n        DynamicIonicFormArrayComponent,\r\n        DynamicIonicFormGroupComponent,\r\n        DynamicIonicInputComponent,\r\n        DynamicIonicRadioGroupComponent,\r\n        DynamicIonicRangeComponent,\r\n        DynamicIonicSelectComponent,\r\n        DynamicIonicTextAreaComponent,\r\n        DynamicIonicToggleComponent\r\n    ],\r\n    exports: [\r\n        DynamicFormsCoreModule,\r\n        DynamicIonicFormControlContainerComponent,\r\n        DynamicIonicFormComponent\r\n    ]\r\n})\r\nexport class DynamicFormsIonicUIModule {}"],"names":["layoutService","validationService","_super","_this","EventEmitter","__extends","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","DynamicFormLayoutService","DynamicFormValidationService","Input","Output","ViewChild","DynamicFormControlComponent","DynamicFormArrayComponent","componentFactoryResolver","Object","DynamicIonicFormControlContainerComponent","this","getCustomComponentType","model","ionicUIFormControlMapFn","ComponentFactoryResolver","ContentChildren","DynamicTemplateDirective","read","ViewContainerRef","DynamicFormControlContainerComponent","type","DYNAMIC_FORM_CONTROL_TYPE_ARRAY","DynamicIonicFormArrayComponent","DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX","DynamicIonicCheckboxComponent","DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP","DynamicIonicFormGroupComponent","DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER","DynamicIonicDateTimeComponent","DYNAMIC_FORM_CONTROL_TYPE_GROUP","DYNAMIC_FORM_CONTROL_TYPE_INPUT","DynamicIonicInputComponent","DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP","DynamicIonicRadioGroupComponent","DYNAMIC_FORM_CONTROL_TYPE_SELECT","DynamicIonicSelectComponent","DYNAMIC_FORM_CONTROL_TYPE_SLIDER","DynamicIonicRangeComponent","DYNAMIC_FORM_CONTROL_TYPE_SWITCH","DynamicIonicToggleComponent","DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA","DynamicIonicTextAreaComponent","DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER","formService","DynamicFormService","ViewChildren","DynamicFormComponent","NgModule","imports","CommonModule","ReactiveFormsModule","IonicModule","TextMaskModule","DynamicFormsCoreModule","declarations","DynamicIonicFormComponent","entryComponents","exports"],"mappings":"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"}