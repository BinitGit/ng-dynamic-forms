/*!
@ng-dynamic-forms/ui-basic 6.2.0 2018-10-18 21:30 UTC
Copyright (c) 2016-2018, Udo Sch√∂fer http://www.udos86.de

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@ng-dynamic-forms/core"),require("@angular/common"),require("angular2-text-mask")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/forms","@ng-dynamic-forms/core","@angular/common","angular2-text-mask"],t):t((e.ngDF=e.ngDF||{},e.ngDF.basicUI={}),e.ng.core,e.ng.forms,e.ngDF.core,e.ng.common,e["angular2-text-mask"])}(this,function(e,a,t,n,o,r){"use strict";var i,l,c,p,u,s,m,d,y=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),g=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return y(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-checkbox",template:'<label [formGroup]="group" [ngClass]="[getClass(\'element\', \'control\'), getClass(\'grid\', \'control\')]">\r\n\r\n    <input type="checkbox"\r\n           [checked]="model.checked"\r\n           [dynamicId]="bindId && model.id"\r\n           [formControlName]="model.id"\r\n           [indeterminate]="model.indeterminate"\r\n           [name]="model.name"\r\n           [required]="model.required"\r\n           [tabindex]="model.tabIndex"\r\n           [value]="model.value"\r\n           (blur)="onBlur($event)"\r\n           (change)="onChange($event)"\r\n           (focus)="onFocus($event)"/><span [ngClass]="getClass(\'element\', \'label\')"\r\n                                            [innerHTML]="model.label"></span></label>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),f=this&&this.__extends||(l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}l(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),h=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.customEvent=new a.EventEmitter,n.focus=new a.EventEmitter,n}return f(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-form-array",template:'<ng-container [formGroup]="group">\r\n\r\n    <div [dynamicId]="bindId && model.id"\r\n         [formArrayName]="model.id"\r\n         [ngClass]="getClass(\'element\', \'control\')">\r\n\r\n        <div *ngFor="let groupModel of model.groups; let idx = index" role="group"\r\n             [formGroupName]="idx" [ngClass]="[getClass(\'element\', \'group\'), getClass(\'grid\', \'group\')]">\r\n\r\n            <ng-container *ngTemplateOutlet="startTemplate?.templateRef; context: groupModel"></ng-container>\r\n\r\n            <dynamic-basic-form-control *ngFor="let _model of groupModel.group"\r\n                                        [bindId]="false"\r\n                                        [context]="groupModel"\r\n                                        [group]="control.at(idx)"\r\n                                        [hidden]="_model.hidden"\r\n                                        [layout]="layout"\r\n                                        [model]="_model"\r\n                                        [templates]="templates"\r\n                                        [ngClass]="[getClass(\'element\', \'host\', _model), getClass(\'grid\', \'host\', _model),\r\n                                                    getClass(\'element\',\'children\'), getClass(\'grid\',\'children\')]"\r\n                                        (blur)="onBlur($event)"\r\n                                        (change)="onChange($event)"\r\n                                        (focus)="onFocus($event)"\r\n                                        (bsEvent)="onCustomEvent($event, null, true)"></dynamic-basic-form-control>\r\n\r\n            <ng-container *ngTemplateOutlet="endTemplate?.templateRef; context: groupModel"></ng-container>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</ng-container>'}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],templates:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],customEvent:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormArrayComponent),v=this&&this.__extends||(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}c(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),C=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.customEvent=new a.EventEmitter,n.focus=new a.EventEmitter,n}return v(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-form-group",template:'<ng-container [formGroup]="group">\r\n\r\n    <fieldset [dynamicId]="bindId && model.id"\r\n              [formGroupName]="model.id"\r\n              [name]="model.name"\r\n              [ngClass]="getClass(\'element\', \'control\')">\r\n\r\n        <legend *ngIf="model.legend" [innerHTML]="model.legend"></legend>\r\n\r\n        <dynamic-basic-form-control *ngFor="let _model of model.group"\r\n                                    [group]="control"\r\n                                    [hidden]="_model.hidden"\r\n                                    [layout]="layout"\r\n                                    [model]="_model"\r\n                                    [templates]="templates"\r\n                                    [ngClass]="[getClass(\'element\', \'host\', _model), getClass(\'grid\', \'host\', _model),\r\n                                                getClass(\'element\',\'children\'), getClass(\'grid\',\'children\')]"\r\n                                    (blur)="onBlur($event)"\r\n                                    (change)="onChange($event)"\r\n                                    (focus)="onFocus($event)"\r\n                                    (bsEvent)="onCustomEvent($event, null, true)"></dynamic-basic-form-control>\r\n    </fieldset>\r\n\r\n</ng-container>'}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],templates:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],customEvent:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),_=this&&this.__extends||(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}p(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),b=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return _(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-input",template:'<div [formGroup]="group">\r\n\r\n    <input [attr.accept]="model.accept"\r\n           [attr.max]="model.max"\r\n           [attr.min]="model.min"\r\n           [attr.multiple]="model.multiple"\r\n           [attr.step]="model.step"\r\n           [autocomplete]="model.autoComplete"\r\n           [autofocus]="model.autoFocus"\r\n           [dynamicId]="bindId && model.id"\r\n           [dynamicList]="model.listId"\r\n           [formControlName]="model.id"\r\n           [maxlength]="model.maxLength"\r\n           [minlength]="model.minLength"\r\n           [name]="model.name"\r\n           [ngClass]="[getClass(\'element\', \'control\'), getClass(\'grid\', \'control\')]"\r\n           [pattern]="model.pattern"\r\n           [placeholder]="model.placeholder"\r\n           [readonly]="model.readOnly"\r\n           [required]="model.required"\r\n           [spellcheck]="model.spellCheck"\r\n           [tabindex]="model.tabIndex"\r\n           [textMask]="{mask: (model.mask || false), showMask: model.mask && !(model.placeholder)}"\r\n           [type]="model.inputType"\r\n           (blur)="onBlur($event)"\r\n           (change)="onChange($event)"\r\n           (focus)="onFocus($event)"/>\r\n\r\n    <datalist *ngIf="model.hasList" [id]="model.listId">\r\n\r\n        <option *ngFor="let option of model.list$ | async" [value]="option">\r\n\r\n    </datalist>\r\n\r\n</div>\r\n',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),O=this&&this.__extends||(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}u(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),I=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return O(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-radio-group",template:'<fieldset role="radiogroup"\r\n          [dynamicId]="bindId && model.id"\r\n          [formGroup]="group"\r\n          [name]="model.name"\r\n          [ngClass]="[getClass(\'element\', \'control\'), getClass(\'grid\', \'control\')]"\r\n          [tabindex]="model.tabIndex"\r\n          (change)="onChange($event)">\r\n\r\n    <legend *ngIf="model.legend" [innerHTML]="model.legend"></legend>\r\n\r\n    <label *ngFor="let option of model.options$ | async" [ngClass]="getClass(\'element\', \'option\')">\r\n\r\n        <input type="radio"\r\n               [formControlName]="model.id"\r\n               [name]="model.name"\r\n               [value]="option.value"\r\n               (blur)="onBlur($event)"\r\n               (focus)="onFocus($event)"/><span [innerHTML]="option.label"></span></label>\r\n</fieldset>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),E=this&&this.__extends||(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}s(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),D=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return E(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-select",template:'<ng-container [formGroup]="group">\r\n\r\n    <select [compareWith]="model.compareWithFn"\r\n            [dynamicId]="bindId && model.id"\r\n            [formControlName]="model.id"\r\n            [name]="model.name"\r\n            [ngClass]="[getClass(\'element\', \'control\'), getClass(\'grid\', \'control\')]"\r\n            [required]="model.required"\r\n            [tabindex]="model.tabIndex"\r\n            (blur)="onBlur($event)"\r\n            (change)="onChange($event)"\r\n            (focus)="onFocus($event)">\r\n\r\n        <option *ngFor="let option of model.options$ | async"\r\n                [disabled]="option.disabled"\r\n                [ngValue]="option.value">{{ option.label }}\r\n        </option>\r\n\r\n    </select>\r\n\r\n</ng-container>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),F=this&&this.__extends||(m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}m(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),w=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return F(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-textarea",template:'<ng-container [formGroup]="group">\r\n\r\n    <textarea [cols]="model.cols"\r\n              [dynamicId]="bindId && model.id"\r\n              [formControlName]="model.id"\r\n              [maxlength]="model.maxLength"\r\n              [minlength]="model.minLength"\r\n              [name]="model.name"\r\n              [ngClass]="[getClass(\'element\', \'control\'), getClass(\'grid\', \'control\')]"\r\n              [placeholder]="model.placeholder"\r\n              [readonly]="model.readOnly"\r\n              [required]="model.required"\r\n              [rows]="model.rows"\r\n              [spellcheck]="model.spellCheck"\r\n              [tabindex]="model.tabIndex"\r\n              [wrap]="model.wrap"\r\n              (blur)="onBlur($event)"\r\n              (change)="onChange($event)"\r\n              (focus)="onFocus($event)"></textarea>\r\n\r\n</ng-container>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),x=this&&this.__extends||(d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}d(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),P=function(r){function e(e,t,n){var o=r.call(this,e,t,n)||this;return o.componentFactoryResolver=e,o.layoutService=t,o.validationService=n,o.bindId=!0,o.context=null,o.blur=new a.EventEmitter,o.change=new a.EventEmitter,o.focus=new a.EventEmitter,o}return x(e,r),Object.defineProperty(e.prototype,"componentType",{get:function(){return this.layoutService.getCustomComponentType(this.model)||M(this.model)},enumerable:!0,configurable:!0}),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-form-control",template:"<div [formGroup]=\"group\" [ngClass]=\"[getClass('element', 'container'), getClass('grid', 'container')]\">\r\n\r\n    <label *ngIf=\"!isCheckbox && hasLabel\"\r\n           [for]=\"model.id\"\r\n           [innerHTML]=\"model.label\"\r\n           [ngClass]=\"[getClass('element', 'label'), getClass('grid', 'label')]\"></label>\r\n\r\n    <ng-container *ngTemplateOutlet=\"startTemplate?.templateRef; context: model\"></ng-container>\r\n\r\n    <ng-container #componentViewContainer></ng-container>\r\n\r\n    <div *ngIf=\"hasHint\" [ngClass]=\"[getClass('element', 'hint'), getClass('grid', 'hint')]\">\r\n        <span [innerHTML]=\"model.hint\"></span>\r\n    </div>\r\n\r\n    <ul *ngIf=\"showErrorMessages\" [ngClass]=\"[getClass('element', 'errors'), getClass('grid', 'errors')]\">\r\n        <li *ngFor=\"let message of errorMessages\">{{ message }}</li>\r\n    </ul>\r\n\r\n    <ng-container *ngTemplateOutlet=\"endTemplate?.templateRef; context: model\"></ng-container>\r\n\r\n    <ng-content></ng-content>\r\n\r\n</div>"}]}],e.ctorParameters=function(){return[{type:a.ComponentFactoryResolver},{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={contentTemplateList:[{type:a.ContentChildren,args:[n.DynamicTemplateDirective]}],inputTemplateList:[{type:a.Input,args:["templates"]}],bindId:[{type:a.Input}],context:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}],componentViewContainerRef:[{type:a.ViewChild,args:["componentViewContainer",{read:a.ViewContainerRef}]}]},e}(n.DynamicFormControlContainerComponent);function M(e){switch(e.type){case n.DYNAMIC_FORM_CONTROL_TYPE_ARRAY:return h;case n.DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:return g;case n.DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:case n.DYNAMIC_FORM_CONTROL_TYPE_GROUP:return C;case n.DYNAMIC_FORM_CONTROL_TYPE_INPUT:return b;case n.DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:return I;case n.DYNAMIC_FORM_CONTROL_TYPE_SELECT:return D;case n.DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:return w;default:return null}}var S,T=this&&this.__extends||(S=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}S(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),L=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.formService=e,n.layoutService=t,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return T(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-basic-form",template:'<dynamic-basic-form-control *ngFor="let model of formModel; trackBy: trackByFn"\r\n                            [group]="formGroup"\r\n                            [hidden]="model.hidden"\r\n                            [layout]="formLayout"\r\n                            [model]="model"\r\n                            [ngClass]="[getClass(model,\'element\',\'host\'), getClass(model,\'grid\',\'host\')]"\r\n                            [templates]="templates"\r\n                            (blur)="onEvent($event, \'blur\')"\r\n                            (change)="onEvent($event, \'change\')"\r\n                            (focus)="onEvent($event, \'focus\')"></dynamic-basic-form-control>'}]}],e.ctorParameters=function(){return[{type:n.DynamicFormService},{type:n.DynamicFormLayoutService}]},e.propDecorators={formGroup:[{type:a.Input,args:["group"]}],formModel:[{type:a.Input,args:["model"]}],formLayout:[{type:a.Input,args:["layout"]}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}],templates:[{type:a.ContentChildren,args:[n.DynamicTemplateDirective]}],components:[{type:a.ViewChildren,args:[P]}]},e}(n.DynamicFormComponent),R=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[t.FormsModule,o.CommonModule,t.ReactiveFormsModule,r.TextMaskModule,n.DynamicFormsCoreModule],declarations:[g,h,C,b,I,D,w,P,L],entryComponents:[g,h,C,b,I,D,w],exports:[n.DynamicFormsCoreModule,P,L]}]}],e}();e.DynamicBasicCheckboxComponent=g,e.DynamicBasicFormArrayComponent=h,e.DynamicBasicFormGroupComponent=C,e.DynamicBasicInputComponent=b,e.DynamicBasicRadioGroupComponent=I,e.DynamicBasicSelectComponent=D,e.DynamicBasicTextAreaComponent=w,e.DynamicBasicFormComponent=L,e.basicUIFormControlMapFn=M,e.DynamicBasicFormControlContainerComponent=P,e.DynamicFormsBasicUIModule=R,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ui-basic.umd.min.js.map
