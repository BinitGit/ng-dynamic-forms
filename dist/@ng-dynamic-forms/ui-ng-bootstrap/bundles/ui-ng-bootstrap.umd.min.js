/*!
@ng-dynamic-forms/ui-ng-bootstrap 6.2.0 2018-10-18 21:40 UTC
Copyright (c) 2016-2018, Udo Sch√∂fer http://www.udos86.de

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@ng-bootstrap/ng-bootstrap"),require("@ng-dynamic-forms/core"),require("@angular/common"),require("angular2-text-mask")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/forms","@ng-bootstrap/ng-bootstrap","@ng-dynamic-forms/core","@angular/common","angular2-text-mask"],t):t((e.ngDF=e.ngDF||{},e.ngDF.ngBootstrapUI={}),e.ng.core,e.ng.forms,e["@ng-bootstrap/ng-bootstrap"],e.ngDF.core,e.ng.common,e["angular2-text-mask"])}(this,function(e,a,t,n,i,o,r){"use strict";var c,l,p,s,u,m,d,g,y,f,h,v,b,C=this&&this.__extends||(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}c(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),_=function(r){function e(e,t,n){var o=r.call(this,e,t)||this;return o.layoutService=e,o.validationService=t,o.config=n,o.bindId=!0,o.blur=new a.EventEmitter,o.change=new a.EventEmitter,o.focus=new a.EventEmitter,o}return C(e,r),e.decorators=[{type:a.Component,args:[{selector:"dynamic-ng-bootstrap-calendar",template:"<ng-container [formGroup]=\"group\">\r\n\r\n    <ngb-datepicker [displayMonths]=\"model.getAdditional('displayMonths', config['displayMonths'])\"\r\n                    [dynamicId]=\"bindId && model.id\"\r\n                    [firstDayOfWeek]=\"model.getAdditional('firstDayOfWeek', config['firstDayOfWeek'])\"\r\n                    [formControlName]=\"model.id\"\r\n                    [maxDate]=\"model.max\"\r\n                    [minDate]=\"model.min\"\r\n                    [navigation]=\"model.getAdditional('navigation', config['navigation'])\"\r\n                    [ngClass]=\"getClass('element', 'control')\"\r\n                    [outsideDays]=\"model.getAdditional('outsideDays', config['outsideDays'])\"\r\n                    [showWeekdays]=\"model.getAdditional('showWeekdays', config['showWeekdays'])\"\r\n                    [showWeekNumbers]=\"model.getAdditional('showWeekNumbers', config['showWeekNumbers'])\"\r\n                    [startDate]=\"model.focusedDate\"\r\n                    (select)=\"onChange($event)\"></ngb-datepicker>\r\n\r\n</ng-container>",changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:i.DynamicFormLayoutService},{type:i.DynamicFormValidationService},{type:n.NgbDatepickerConfig}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}],ngbCalendar:[{type:a.ViewChild,args:[n.NgbDatepicker]}]},e}(i.DynamicFormControlComponent),O=this&&this.__extends||(l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}l(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),I=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return O(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-ng-bootstrap-checkbox",template:'<div [formGroup]="group" class="form-check" [class.disabled]="model.disabled">\r\n\r\n    <label class="form-check-label">\r\n\r\n        <input type="checkbox" class="form-check-input"\r\n               [checked]="model.checked"\r\n               [class.is-invalid]="showErrorMessages"\r\n               [dynamicId]="bindId && model.id"\r\n               [formControlName]="model.id"\r\n               [indeterminate]="model.indeterminate"\r\n               [name]="model.name"\r\n               [ngClass]="getClass(\'element\', \'control\')"\r\n               [required]="model.required"\r\n               [tabindex]="model.tabIndex"\r\n               [value]="model.value"\r\n               (blur)="onBlur($event)"\r\n               (change)="onChange($event)"\r\n               (focus)="onFocus($event)"/><span [innerHTML]="model.label"\r\n                                                [ngClass]="[getClass(\'element\', \'label\'), getClass(\'grid\', \'label\')]"></span>\r\n    </label>\r\n\r\n</div>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:i.DynamicFormLayoutService},{type:i.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(i.DynamicFormControlComponent),E=this&&this.__extends||(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}p(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),D=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return E(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-ng-bootstrap-checkbox-group",template:'<ng-container [formGroup]="group">\r\n\r\n    <div class="btn-group btn-group-toggle" data-toggle="buttons"\r\n         [dynamicId]="bindId && model.id"\r\n         [formGroupName]="model.id"\r\n         [ngClass]="getClass(\'element\', \'control\')">\r\n\r\n        <label *ngFor="let checkboxModel of model.group" ngbButtonLabel\r\n               [hidden]="checkboxModel.hidden"\r\n               [ngClass]="getClass(\'element\', \'control\', checkboxModel)">\r\n\r\n            <input type="checkbox" ngbButton\r\n                   [checked]="checkboxModel.checked"\r\n                   [dynamicId]="bindId && checkboxModel.id"\r\n                   [formControlName]="checkboxModel.id"\r\n                   [name]="checkboxModel.name"\r\n                   [required]="checkboxModel.required"\r\n                   [tabindex]="checkboxModel.tabIndex"\r\n                   [value]="checkboxModel.value"\r\n                   (blur)="onBlur($event)"\r\n                   (change)="onEmbeddedCheckboxChange($event, checkboxModel)"\r\n                   (focus)="onFocus($event)"/><span [ngClass]="getClass(\'element\', \'label\', checkboxModel)"\r\n                                                    [innerHTML]="checkboxModel.label"></span></label>\r\n    </div>\r\n\r\n</ng-container>'}]}],e.ctorParameters=function(){return[{type:i.DynamicFormLayoutService},{type:i.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(i.DynamicFormControlComponent),w=this&&this.__extends||(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}s(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),F=function(r){function e(e,t,n){var o=r.call(this,e,t)||this;return o.layoutService=e,o.validationService=t,o.config=n,o.bindId=!0,o.blur=new a.EventEmitter,o.change=new a.EventEmitter,o.focus=new a.EventEmitter,o}return w(e,r),e.decorators=[{type:a.Component,args:[{selector:"dynamic-ng-bootstrap-datepicker",template:'<div [formGroup]="group" class="input-group">\r\n\r\n    <input ngbDatepicker class="form-control" #datepicker="ngbDatepicker"\r\n           [class.is-invalid]="showErrorMessages"\r\n           [displayMonths]="model.getAdditional(\'displayMonths\', config[\'displayMonths\'])"\r\n           [dynamicId]="bindId && model.id"\r\n           [firstDayOfWeek]="model.getAdditional(\'firstDayOfWeek\', config[\'firstDayOfWeek\'])"\r\n           [formControlName]="model.id"\r\n           [maxDate]="model.max"\r\n           [minDate]="model.min"\r\n           [name]="model.name"\r\n           [navigation]="model.getAdditional(\'navigation\', config[\'navigation\'])"\r\n           [ngClass]="getClass(\'element\', \'control\')"\r\n           [outsideDays]="model.getAdditional(\'outsideDays\', config[\'outsideDays\'])"\r\n           [placeholder]="model.placeholder"\r\n           [placement]="model.getAdditional(\'placement\', \'bottom-left\')"\r\n           [showWeekdays]="model.getAdditional(\'showWeekdays\', config[\'showWeekdays\'])"\r\n           [showWeekNumbers]="model.getAdditional(\'showWeekNumbers\', config[\'showWeekNumbers\'])"\r\n           [startDate]="model.focusedDate"\r\n           (blur)="onBlur($event)"\r\n           (change)="onChange($event)"\r\n           (focus)="onFocus($event)">\r\n\r\n    <div class="input-group-append">\r\n\r\n        <button class="btn btn-outline-secondary" type="button" (click)="datepicker.toggle()">\r\n\r\n            <img *ngIf="model.toggleIcon" [src]="model.toggleIcon" style="cursor: pointer;"/>\r\n            <span *ngIf="model.toggleLabel">{{ model.toggleLabel }}</span>\r\n\r\n        </button>\r\n\r\n    </div>\r\n\r\n</div>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:i.DynamicFormLayoutService},{type:i.DynamicFormValidationService},{type:n.NgbDatepickerConfig}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}],ngbDatePicker:[{type:a.ViewChild,args:[n.NgbDatepicker]}]},e}(i.DynamicFormControlComponent),k=this&&this.__extends||(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}u(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),x=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.customEvent=new a.EventEmitter,n.focus=new a.EventEmitter,n}return k(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-ng-bootstrap-form-array",template:'<ng-container [formGroup]="group">\r\n\r\n    <div [dynamicId]="bindId && model.id"\r\n         [formArrayName]="model.id"\r\n         [ngClass]="getClass(\'element\', \'control\')">\r\n\r\n        <div *ngFor="let groupModel of model.groups; let idx = index" role="group"\r\n             [formGroupName]="idx" [ngClass]="[getClass(\'element\', \'group\'), getClass(\'grid\', \'group\')]">\r\n\r\n            <ng-container *ngTemplateOutlet="startTemplate?.templateRef; context: groupModel"></ng-container>\r\n\r\n            <dynamic-ng-bootstrap-form-control *ngFor="let _model of groupModel.group"\r\n                                               [bindId]="false"\r\n                                               [context]="groupModel"\r\n                                               [group]="control.at(idx)"\r\n                                               [hidden]="_model.hidden"\r\n                                               [layout]="layout"\r\n                                               [model]="_model"\r\n                                               [templates]="templates"\r\n                                               [ngClass]="[getClass(\'element\', \'host\', _model), getClass(\'grid\', \'host\', _model),\r\n                                                           getClass(\'element\',\'children\'), getClass(\'grid\',\'children\')]"\r\n                                               (blur)="onBlur($event)"\r\n                                               (change)="onChange($event)"\r\n                                               (focus)="onFocus($event)"\r\n                                               (ngbEvent)="onCustomEvent($event, null, true)"></dynamic-ng-bootstrap-form-control>\r\n\r\n            <ng-container *ngTemplateOutlet="endTemplate?.templateRef; context: groupModel"></ng-container>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</ng-container>'}]}],e.ctorParameters=function(){return[{type:i.DynamicFormLayoutService},{type:i.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],templates:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],customEvent:[{type:a.Output}],focus:[{type:a.Output}]},e}(i.DynamicFormArrayComponent),M=this&&this.__extends||(m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}m(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),S=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.customEvent=new a.EventEmitter,n.focus=new a.EventEmitter,n}return M(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-ng-bootstrap-form-group",template:'<ng-container [formGroup]="group">\r\n\r\n    <div role="group"\r\n         [dynamicId]="bindId && model.id"\r\n         [formGroupName]="model.id"\r\n         [ngClass]="getClass(\'element\',\'control\')">\r\n\r\n        <dynamic-ng-bootstrap-form-control *ngFor="let _model of model.group"\r\n                                           [asBootstrapFormGroup]="true"\r\n                                           [group]="control"\r\n                                           [hidden]="_model.hidden"\r\n                                           [layout]="layout"\r\n                                           [model]="_model"\r\n                                           [templates]="templates"\r\n                                           [ngClass]="[getClass(\'element\', \'host\', _model), getClass(\'grid\', \'host\', _model),\r\n                                                       getClass(\'element\',\'children\'), getClass(\'grid\',\'children\')]"\r\n                                           (blur)="onBlur($event)"\r\n                                           (change)="onChange($event)"\r\n                                           (focus)="onFocus($event)"\r\n                                           (ngbEvent)="onCustomEvent($event, null, true)"></dynamic-ng-bootstrap-form-control>\r\n    </div>\r\n\r\n</ng-container>'}]}],e.ctorParameters=function(){return[{type:i.DynamicFormLayoutService},{type:i.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],templates:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],customEvent:[{type:a.Output}],focus:[{type:a.Output}]},e}(i.DynamicFormControlComponent),P=this&&this.__extends||(d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}d(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),N=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n.click=new a.EventEmitter,n}return P(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-ng-bootstrap-input",template:'<div [formGroup]="group" [class.input-group]="model.prefix || model.suffix">\r\n\r\n    <div *ngIf="model.prefix" class="input-group-prepend">\r\n        <span class="input-group-text" [innerHTML]="model.prefix"></span>\r\n    </div>\r\n\r\n    <input [attr.accept]="model.accept"\r\n           [attr.max]="model.max"\r\n           [attr.min]="model.min"\r\n           [attr.multiple]="model.multiple"\r\n           [attr.step]="model.step"\r\n           [autocomplete]="model.autoComplete"\r\n           [autofocus]="model.autoFocus"\r\n           [class.form-control]="model.inputType !== \'file\'"\r\n           [class.form-control-file]="model.inputType === \'file\'"\r\n           [class.is-invalid]="showErrorMessages"\r\n           [dynamicId]="bindId && model.id"\r\n           [dynamicList]="model.listId"\r\n           [formControlName]="model.id"\r\n           [maxlength]="model.maxLength"\r\n           [minlength]="model.minLength"\r\n           [name]="model.name"\r\n           [ngClass]="getClass(\'element\', \'control\')"\r\n           [pattern]="model.pattern"\r\n           [placeholder]="model.placeholder"\r\n           [readonly]="model.readOnly"\r\n           [required]="model.required"\r\n           [spellcheck]="model.spellCheck"\r\n           [tabindex]="model.tabIndex"\r\n           [textMask]="{mask: (model.mask || false), showMask: model.mask && !(model.placeholder)}"\r\n           [type]="model.inputType"\r\n           (blur)="onBlur($event)"\r\n           (change)="onChange($event)"\r\n           (focus)="onFocus($event)"\r\n           (click)="onClick($event)"/>\r\n\r\n    <div *ngIf="model.suffix" class="input-group-append">\r\n        <span class="input-group-text" [innerHTML]="model.suffix"></span>\r\n    </div>\r\n\r\n    <datalist *ngIf="model.hasList" [id]="model.listId">\r\n\r\n        <option *ngFor="let option of model.list$ | async" [value]="option">\r\n\r\n    </datalist>\r\n\r\n</div>\r\n',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:i.DynamicFormLayoutService},{type:i.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}],click:[{type:a.Output}]},e}(i.DynamicFormControlComponent),T=this&&this.__extends||(g=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}g(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),A=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return T(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-ng-bootstrap-radio-group",template:'<ng-container [formGroup]="group">\r\n\r\n    <div ngbRadioGroup class="btn-group btn-group-toggle" role="radiogroup"\r\n         [dynamicId]="bindId && model.id"\r\n         [formControlName]="model.id"\r\n         [ngClass]="getClass(\'element\', \'control\')"\r\n         [tabindex]="model.tabIndex"\r\n         (change)="onChange($event)">\r\n\r\n        <legend *ngIf="model.legend" [innerHTML]="model.legend"></legend>\r\n\r\n        <label *ngFor="let option of model.options$ | async" ngbButtonLabel\r\n               [ngClass]="[getClass(\'element\', \'option\'), getClass(\'grid\', \'option\')]">\r\n\r\n            <input type="radio" ngbButton\r\n                   [disabled]="option.disabled"\r\n                   [name]="model.name"\r\n                   [value]="option.value"\r\n                   (blur)="onBlur($event)"\r\n                   (focus)="onFocus($event)"/><span [innerHTML]="option.label"></span>\r\n        </label>\r\n\r\n    </div>\r\n\r\n</ng-container>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:i.DynamicFormLayoutService},{type:i.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(i.DynamicFormControlComponent),L=this&&this.__extends||(y=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}y(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),R=function(r){function e(e,t,n){var o=r.call(this,e,t)||this;return o.layoutService=e,o.validationService=t,o.config=n,o.bindId=!0,o.blur=new a.EventEmitter,o.change=new a.EventEmitter,o.focus=new a.EventEmitter,o}return L(e,r),e.decorators=[{type:a.Component,args:[{selector:"dynamic-ng-bootstrap-rating",template:'<ng-container [formGroup]="group">\r\n\r\n    <ngb-rating [dynamicId]="bindId && model.id"\r\n                [formControlName]="model.id"\r\n                [max]="model.max"\r\n                [ngClass]="getClass(\'element\', \'control\')"\r\n                [resettable]="model.getAdditional(\'resettable\', config[\'resettable\'])"\r\n                (rateChange)="onChange($event)"></ngb-rating>\r\n\r\n</ng-container>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:i.DynamicFormLayoutService},{type:i.DynamicFormValidationService},{type:n.NgbRatingConfig}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}],ngbRating:[{type:a.ViewChild,args:[n.NgbRating]}]},e}(i.DynamicFormControlComponent),G=this&&this.__extends||(f=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}f(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),$=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return G(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-ng-bootstrap-select",template:'<ng-container [formGroup]="group">\r\n\r\n    <select class="form-control"\r\n            [class.is-invalid]="showErrorMessages"\r\n            [compareWith]="model.compareWithFn"\r\n            [dynamicId]="bindId && model.id"\r\n            [formControlName]="model.id"\r\n            [name]="model.name"\r\n            [ngClass]="getClass(\'element\', \'control\')"\r\n            [required]="model.required"\r\n            [tabindex]="model.tabIndex"\r\n            (blur)="onBlur($event)"\r\n            (change)="onChange($event)"\r\n            (focus)="onFocus($event)">\r\n\r\n        <option *ngFor="let option of model.options$ | async"\r\n                [disabled]="option.disabled"\r\n                [ngValue]="option.value">{{ option.label }}</option>\r\n\r\n    </select>\r\n\r\n</ng-container>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:i.DynamicFormLayoutService},{type:i.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(i.DynamicFormControlComponent),B=this&&this.__extends||(h=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}h(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),j=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return B(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-ng-bootstrap-textarea",template:'<ng-container [formGroup]="group">\r\n\r\n    <textarea class="form-control"\r\n              [class.is-invalid]="showErrorMessages"\r\n              [dynamicId]="bindId && model.id"\r\n              [cols]="model.cols"\r\n              [formControlName]="model.id"\r\n              [maxlength]="model.maxLength"\r\n              [minlength]="model.minLength"\r\n              [name]="model.name"\r\n              [ngClass]="getClass(\'element\', \'control\')"\r\n              [placeholder]="model.placeholder"\r\n              [readonly]="model.readOnly"\r\n              [required]="model.required"\r\n              [rows]="model.rows"\r\n              [spellcheck]="model.spellCheck"\r\n              [tabindex]="model.tabIndex"\r\n              [wrap]="model.wrap"\r\n              (blur)="onBlur($event)"\r\n              (change)="onChange($event)"\r\n              (focus)="onFocus($event)"></textarea>\r\n\r\n</ng-container>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:i.DynamicFormLayoutService},{type:i.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(i.DynamicFormControlComponent),V=this&&this.__extends||(v=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}v(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),Y=function(r){function e(e,t,n){var o=r.call(this,e,t)||this;return o.layoutService=e,o.validationService=t,o.config=n,o.bindId=!0,o.blur=new a.EventEmitter,o.change=new a.EventEmitter,o.focus=new a.EventEmitter,o}return V(e,r),e.decorators=[{type:a.Component,args:[{selector:"dynamic-ng-bootstrap-timepicker",template:"<ng-container [formGroup]=\"group\">\r\n\r\n    <ngb-timepicker [dynamicId]=\"bindId && model.id\"\r\n                    [formControlName]=\"model.id\"\r\n                    [hourStep]=\"model.getAdditional('hourStep', config['hourStep'])\"\r\n                    [meridian]=\"model.meridian\"\r\n                    [minuteStep]=\"model.getAdditional('minuteStep', config['minuteStep'])\"\r\n                    [ngClass]=\"getClass('element', 'control')\"\r\n                    [seconds]=\"model.showSeconds\"\r\n                    [secondStep]=\"model.getAdditional('secondStep', config['secondStep'])\"\r\n                    [size]=\"model.getAdditional('size', config['size'])\"\r\n                    [spinners]=\"model.getAdditional('spinners', config['spinners'])\"></ngb-timepicker>\r\n\r\n</ng-container>",changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:i.DynamicFormLayoutService},{type:i.DynamicFormValidationService},{type:n.NgbTimepickerConfig}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}],ngbTimePicker:[{type:a.ViewChild,args:[n.NgbTimepicker]}]},e}(i.DynamicFormControlComponent),W=this&&this.__extends||(b=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}b(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),q=function(r){function e(e,t,n){var o=r.call(this,e,t,n)||this;return o.componentFactoryResolver=e,o.layoutService=t,o.validationService=n,o.asBootstrapFormGroup=!0,o.bindId=!0,o.context=null,o.blur=new a.EventEmitter,o.change=new a.EventEmitter,o.focus=new a.EventEmitter,o.click=new a.EventEmitter,o.customEvent=new a.EventEmitter,o}return W(e,r),Object.defineProperty(e.prototype,"componentType",{get:function(){return this.layoutService.getCustomComponentType(this.model)||H(this.model)},enumerable:!0,configurable:!0}),e.decorators=[{type:a.Component,args:[{selector:"dynamic-ng-bootstrap-form-control",template:"<div [class.form-group]=\"(model.type !== 'GROUP' && asBootstrapFormGroup) || getClass('element', 'container').includes('form-group')\"\r\n     [formGroup]=\"group\"\r\n     [ngClass]=\"[getClass('element', 'container'), getClass('grid', 'container')]\">\r\n\r\n    <label *ngIf=\"!isCheckbox && hasLabel\"\r\n           [for]=\"model.id\"\r\n           [innerHTML]=\"model.label\"\r\n           [ngClass]=\"[getClass('element', 'label'), getClass('grid', 'label')]\"></label>\r\n\r\n    <ng-container *ngTemplateOutlet=\"startTemplate?.templateRef; context: model\"></ng-container>\r\n\r\n    <div [ngClass]=\"getClass('grid', 'control')\">\r\n\r\n        <ng-container #componentViewContainer></ng-container>\r\n\r\n        <small *ngIf=\"hasHint\" class=\"text-muted\" [innerHTML]=\"model.hint\" [ngClass]=\"getClass('element', 'hint')\"></small>\r\n\r\n        <div *ngIf=\"showErrorMessages\" [ngClass]=\"[getClass('element', 'errors'), getClass('grid', 'errors')]\">\r\n            <small *ngFor=\"let message of errorMessages\" class=\"invalid-feedback d-block\">{{ message }}</small>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <ng-container *ngTemplateOutlet=\"endTemplate?.templateRef; context: model\"></ng-container>\r\n\r\n    <ng-content></ng-content>\r\n\r\n</div>\r\n"}]}],e.ctorParameters=function(){return[{type:a.ComponentFactoryResolver},{type:i.DynamicFormLayoutService},{type:i.DynamicFormValidationService}]},e.propDecorators={contentTemplateList:[{type:a.ContentChildren,args:[i.DynamicTemplateDirective]}],inputTemplateList:[{type:a.Input,args:["templates"]}],asBootstrapFormGroup:[{type:a.Input}],bindId:[{type:a.Input}],context:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}],click:[{type:a.Output}],customEvent:[{type:a.Output,args:["ngbEvent"]}],componentViewContainerRef:[{type:a.ViewChild,args:["componentViewContainer",{read:a.ViewContainerRef}]}]},e}(i.DynamicFormControlContainerComponent);function H(e){switch(e.type){case i.DYNAMIC_FORM_CONTROL_TYPE_ARRAY:return x;case i.DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:return I;case i.DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:return D;case i.DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:return e.inline?_:F;case i.DYNAMIC_FORM_CONTROL_TYPE_GROUP:return S;case i.DYNAMIC_FORM_CONTROL_TYPE_INPUT:return N;case i.DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:return A;case i.DYNAMIC_FORM_CONTROL_TYPE_RATING:return R;case i.DYNAMIC_FORM_CONTROL_TYPE_SELECT:return $;case i.DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:return j;case i.DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:return Y;default:return null}}var U,K=this&&this.__extends||(U=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}U(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),z=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.formService=e,n.layoutService=t,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n.customEvent=new a.EventEmitter,n}return K(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-ng-bootstrap-form",template:'<dynamic-ng-bootstrap-form-control *ngFor="let model of formModel; trackBy: trackByFn"\r\n                                   [group]="formGroup"\r\n                                   [hidden]="model.hidden"\r\n                                   [layout]="formLayout"\r\n                                   [model]="model"\r\n                                   [ngClass]="[getClass(model, \'element\', \'host\'), getClass(model, \'grid\', \'host\')]"\r\n                                   [templates]="templates"\r\n                                   (blur)="onEvent($event, \'blur\')"\r\n                                   (change)="onEvent($event, \'change\')"\r\n                                   (focus)="onEvent($event, \'focus\')"\r\n                                   (click)="onEvent($event, \'focus\')"\r\n                                   (ngbEvent)="onEvent($event, \'custom\')"></dynamic-ng-bootstrap-form-control>'}]}],e.ctorParameters=function(){return[{type:i.DynamicFormService},{type:i.DynamicFormLayoutService}]},e.propDecorators={formGroup:[{type:a.Input,args:["group"]}],formModel:[{type:a.Input,args:["model"]}],formLayout:[{type:a.Input,args:["layout"]}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}],customEvent:[{type:a.Output,args:["ngbEvent"]}],templates:[{type:a.ContentChildren,args:[i.DynamicTemplateDirective]}],components:[{type:a.ViewChildren,args:[q]}]},e}(i.DynamicFormComponent),X=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[o.CommonModule,t.ReactiveFormsModule,n.NgbButtonsModule,n.NgbDatepickerModule,n.NgbRatingModule,n.NgbTimepickerModule,r.TextMaskModule,i.DynamicFormsCoreModule],declarations:[_,I,D,F,x,S,N,A,R,$,j,Y,q,z],entryComponents:[_,I,D,F,x,S,N,A,R,$,j,Y],exports:[i.DynamicFormsCoreModule,q,z]}]}],e}();e.DynamicNGBootstrapCalendarComponent=_,e.DynamicNGBootstrapCheckboxComponent=I,e.DynamicNGBootstrapCheckboxGroupComponent=D,e.DynamicNGBootstrapDatePickerComponent=F,e.DynamicNGBootstrapFormArrayComponent=x,e.DynamicNGBootstrapFormGroupComponent=S,e.DynamicNGBootstrapInputComponent=N,e.DynamicNGBootstrapRadioGroupComponent=A,e.DynamicNGBootstrapRatingComponent=R,e.DynamicNGBootstrapSelectComponent=$,e.DynamicNGBootstrapTextAreaComponent=j,e.DynamicNGBootstrapTimePickerComponent=Y,e.DynamicNGBootstrapFormComponent=z,e.ngBootstrapUIFormControlMapFn=H,e.DynamicNGBootstrapFormControlContainerComponent=q,e.DynamicFormsNGBootstrapUIModule=X,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ui-ng-bootstrap.umd.min.js.map
