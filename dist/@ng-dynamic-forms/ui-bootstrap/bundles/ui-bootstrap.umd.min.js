/*!
@ng-dynamic-forms/ui-bootstrap 6.2.0 2018-10-18 21:32 UTC
Copyright (c) 2016-2018, Udo Sch√∂fer http://www.udos86.de

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@ng-dynamic-forms/core"),require("ngx-bootstrap/datepicker"),require("ngx-bootstrap/timepicker"),require("@angular/common"),require("angular2-text-mask")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/forms","@ng-dynamic-forms/core","ngx-bootstrap/datepicker","ngx-bootstrap/timepicker","@angular/common","angular2-text-mask"],t):t((e.ngDF=e.ngDF||{},e.ngDF.bootstrapUI={}),e.ng.core,e.ng.forms,e.ngDF.core,e["ngx-bootstrap"].umd,e["ngx-bootstrap"].umd,e.ng.common,e["angular2-text-mask"])}(this,function(e,a,t,n,r,i,o,l){"use strict";var p,c,s,u,m,d,y,g,f,h,v=this&&this.__extends||(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}p(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),C=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return v(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-bootstrap-checkbox",template:'<div [formGroup]="group" [class.disabled]="model.disabled" [ngClass]="getClass(\'element\', \'control\') || \'checkbox\'">\r\n\r\n    <label>\r\n\r\n        <input type="checkbox"\r\n               [checked]="model.checked"\r\n               [dynamicId]="bindId && model.id"\r\n               [formControlName]="model.id"\r\n               [indeterminate]="model.indeterminate"\r\n               [name]="model.name"\r\n               [ngClass]="getClass(\'element\', \'control\')"\r\n               [required]="model.required"\r\n               [tabindex]="model.tabIndex"\r\n               [value]="model.value"\r\n               (blur)="onBlur($event)"\r\n               (change)="onChange($event)"\r\n               (focus)="onFocus($event)"/><span [innerHTML]="model.label"\r\n                                                [ngClass]="[getClass(\'element\', \'label\'), getClass(\'grid\', \'label\')]"></span></label>\r\n</div>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),b=this&&this.__extends||(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}c(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),_=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.customEvent=new a.EventEmitter,n.focus=new a.EventEmitter,n}return b(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-bootstrap-datepicker",template:'<div [formGroup]="group" class="input-group">\r\n\r\n    <input bsDatepicker class="form-control" #bsDatepicker="bsDatepicker"\r\n           [autofocus]="model.autoFocus"\r\n           [bsConfig]="model.getAdditional(\'bsConfig\', {containerClass: model.getAdditional(\'containerClass\', \'theme-green\'), showWeekNumbers: model.getAdditional(\'showWeekNumbers\', true)})"\r\n           [dynamicId]="bindId && model.id"\r\n           [formControlName]="model.id"\r\n           [maxDate]="model.max"\r\n           [minDate]="model.min"\r\n           [name]="model.name"\r\n           [ngClass]="getClass(\'element\', \'control\')"\r\n           [outsideClick]="model.getAdditional(\'outsideClick\', true)"\r\n           [placeholder]="model.placeholder"\r\n           [placement]="model.getAdditional(\'placement\', \'bottom\')"\r\n           [readonly]="model.readOnly"\r\n           [required]="model.required"\r\n           (bsValueChange)="onChange($event)"\r\n           (onHidden)="onCustomEvent($event, \'onHidden\')"\r\n           (onShown)="onCustomEvent($event, \'onShown\')">\r\n\r\n    <div *ngIf="model.toggleLabel" class="input-group-btn">\r\n\r\n        <button *ngIf="model.toggleIcon" class="btn" (click)="bsDatepicker.toggle()"><img [src]="model.toggleIcon"/></button>\r\n        <button *ngIf="model.toggleLabel" class="btn" (click)="bsDatepicker.toggle()">{{ model.toggleLabel }}</button>\r\n\r\n    </div>\r\n\r\n</div>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],customEvent:[{type:a.Output}],focus:[{type:a.Output}],bsDatePicker:[{type:a.ViewChild,args:[r.BsDatepickerDirective]}]},e}(n.DynamicFormControlComponent),O=this&&this.__extends||(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}s(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),I=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.customEvent=new a.EventEmitter,n.focus=new a.EventEmitter,n}return O(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-bootstrap-form-array",template:'<ng-container [formGroup]="group">\r\n\r\n    <div [dynamicId]="bindId && model.id"\r\n         [formArrayName]="model.id"\r\n         [ngClass]="getClass(\'element\', \'control\')">\r\n\r\n        <div *ngFor="let groupModel of model.groups; let idx = index" role="group"\r\n             [formGroupName]="idx" [ngClass]="[getClass(\'element\', \'group\'), getClass(\'grid\', \'group\')]">\r\n\r\n            <ng-container *ngTemplateOutlet="startTemplate?.templateRef; context: groupModel"></ng-container>\r\n\r\n            <dynamic-bootstrap-form-control *ngFor="let _model of groupModel.group"\r\n                                            [bindId]="false"\r\n                                            [context]="groupModel"\r\n                                            [group]="control.at(idx)"\r\n                                            [hidden]="_model.hidden"\r\n                                            [layout]="layout"\r\n                                            [model]="_model"\r\n                                            [templates]="templates"\r\n                                            [ngClass]="[getClass(\'element\', \'host\', _model), getClass(\'grid\', \'host\', _model),\r\n                                                        getClass(\'element\',\'children\'), getClass(\'grid\',\'children\')]"\r\n                                            (blur)="onBlur($event)"\r\n                                            (change)="onChange($event)"\r\n                                            (focus)="onFocus($event)"\r\n                                            (bsEvent)="onCustomEvent($event, null, true)"></dynamic-bootstrap-form-control>\r\n\r\n            <ng-container *ngTemplateOutlet="endTemplate?.templateRef; context: groupModel"></ng-container>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</ng-container>'}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],templates:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],customEvent:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormArrayComponent),E=this&&this.__extends||(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}u(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),D=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.customEvent=new a.EventEmitter,n.focus=new a.EventEmitter,n}return E(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-bootstrap-form-group",template:'<ng-container [formGroup]="group">\r\n\r\n    <fieldset [dynamicId]="bindId && model.id"\r\n              [formGroupName]="model.id"\r\n              [name]="model.name"\r\n              [ngClass]="getClass(\'element\', \'control\')">\r\n\r\n        <legend *ngIf="model.legend" [innerHTML]="model.legend"></legend>\r\n\r\n        <dynamic-bootstrap-form-control *ngFor="let _model of model.group"\r\n                                        [asBootstrapFormGroup]="false"\r\n                                        [group]="control"\r\n                                        [hidden]="_model.hidden"\r\n                                        [layout]="layout"\r\n                                        [model]="_model"\r\n                                        [templates]="templates"\r\n                                        [ngClass]="[getClass(\'element\', \'host\', _model), getClass(\'grid\', \'host\', _model),\r\n                                                    getClass(\'element\',\'children\'), getClass(\'grid\',\'children\')]"\r\n                                        (blur)="onBlur($event)"\r\n                                        (change)="onChange($event)"\r\n                                        (focus)="onFocus($event)"\r\n                                        (bsEvent)="onCustomEvent($event, null, true)"></dynamic-bootstrap-form-control>\r\n    </fieldset>\r\n\r\n</ng-container>'}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],templates:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],customEvent:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),w=this&&this.__extends||(m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}m(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),F=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return w(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-bootstrap-input",template:'<div [formGroup]="group" [class.input-group]="model.prefix || model.suffix">\r\n\r\n    <div *ngIf="model.prefix" class="input-group-addon" [innerHTML]="model.prefix"></div>\r\n\r\n    <input class="form-control"\r\n           [attr.accept]="model.accept"\r\n           [attr.max]="model.max"\r\n           [attr.min]="model.min"\r\n           [attr.multiple]="model.multiple"\r\n           [attr.step]="model.step"\r\n           [autocomplete]="model.autoComplete"\r\n           [autofocus]="model.autoFocus"\r\n           [dynamicId]="bindId && model.id"\r\n           [dynamicList]="model.listId"\r\n           [formControlName]="model.id"\r\n           [maxlength]="model.maxLength"\r\n           [minlength]="model.minLength"\r\n           [name]="model.name"\r\n           [ngClass]="getClass(\'element\', \'control\')"\r\n           [pattern]="model.pattern"\r\n           [placeholder]="model.placeholder"\r\n           [readonly]="model.readOnly"\r\n           [required]="model.required"\r\n           [spellcheck]="model.spellCheck"\r\n           [tabindex]="model.tabIndex"\r\n           [textMask]="{mask: (model.mask || false), showMask: model.mask && !(model.placeholder)}"\r\n           [type]="model.inputType"\r\n           (blur)="onBlur($event)"\r\n           (change)="onChange($event)"\r\n           (focus)="onFocus($event)"/>\r\n\r\n    <div *ngIf="model.suffix" class="input-group-addon" [innerHTML]="model.suffix"></div>\r\n\r\n    <datalist *ngIf="model.hasList" [id]="model.listId">\r\n\r\n        <option *ngFor="let option of model.list$ | async" [value]="option">\r\n\r\n    </datalist>\r\n\r\n</div>\r\n',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),x=this&&this.__extends||(d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}d(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),S=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return x(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-bootstrap-radio-group",template:'<fieldset role="radiogroup"\r\n          [dynamicId]="bindId && model.id"\r\n          [formGroup]="group"\r\n          [name]="model.name"\r\n          [ngClass]="getClass(\'element\', \'control\')"\r\n          [tabindex]="model.tabIndex"\r\n          (change)="onChange($event)">\r\n\r\n    <legend *ngIf="model.legend" [innerHTML]="model.legend"></legend>\r\n\r\n    <div *ngFor="let option of model.options$ | async" [ngClass]="getClass(\'element\', \'option\') || \'radio\'">\r\n\r\n        <label><input type="radio"\r\n                      [formControlName]="model.id"\r\n                      [name]="model.name"\r\n                      [value]="option.value"\r\n                      (blur)="onBlur($event)"\r\n                      (focus)="onFocus($event)"/><span [innerHTML]="option.label"></span></label>\r\n    </div>\r\n\r\n</fieldset>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),P=this&&this.__extends||(y=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}y(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),T=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return P(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-bootstrap-select",template:'<ng-container [formGroup]="group">\r\n\r\n    <select class="form-control"\r\n            [compareWith]="model.compareWithFn"\r\n            [dynamicId]="bindId && model.id"\r\n            [formControlName]="model.id"\r\n            [name]="model.name"\r\n            [ngClass]="getClass(\'element\', \'control\')"\r\n            [required]="model.required"\r\n            [tabindex]="model.tabIndex"\r\n            (blur)="onBlur($event)"\r\n            (change)="onChange($event)"\r\n            (focus)="onFocus($event)">\r\n\r\n        <option *ngFor="let option of model.options$ | async"\r\n                [disabled]="option.disabled"\r\n                [ngValue]="option.value">{{ option.label }}\r\n        </option>\r\n\r\n    </select>\r\n\r\n</ng-container>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),M=this&&this.__extends||(g=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}g(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),k=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return M(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-bootstrap-textarea",template:'<ng-container [formGroup]="group">\r\n\r\n    <textarea class="form-control"\r\n              [dynamicId]="bindId && model.id"\r\n              [cols]="model.cols"\r\n              [formControlName]="model.id"\r\n              [maxlength]="model.maxLength"\r\n              [minlength]="model.minLength"\r\n              [name]="model.name"\r\n              [ngClass]="getClass(\'element\', \'control\')"\r\n              [placeholder]="model.placeholder"\r\n              [readonly]="model.readOnly"\r\n              [required]="model.required"\r\n              [rows]="model.rows"\r\n              [spellcheck]="model.spellCheck"\r\n              [tabindex]="model.tabIndex"\r\n              [wrap]="model.wrap"\r\n              (blur)="onBlur($event)"\r\n              (change)="onChange($event)"\r\n              (focus)="onFocus($event)"></textarea>\r\n\r\n</ng-container>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}]},e}(n.DynamicFormControlComponent),L=this&&this.__extends||(f=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}f(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),A=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.layoutService=e,n.validationService=t,n.bindId=!0,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n}return L(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-bootstrap-timepicker",template:'<ng-container [formGroup]="group">\r\n\r\n    <timepicker [arrowkeys]="model.getAdditional(\'arrowkeys\', true)"\r\n                [dynamicId]="bindId && model.id"\r\n                [formControlName]="model.id"\r\n                [hourStep]="model.getAdditional(\'hourStep\', 1)"\r\n                [max]="model.max"\r\n                [min]="model.min"\r\n                [mousewheel]="model.getAdditional(\'mousewheel\', true)"\r\n                [minuteStep]="model.getAdditional(\'minuteStep\', 1)"\r\n                [ngClass]="getClass(\'element\', \'control\')"\r\n                [secondsStep]="model.getAdditional(\'secondsStep\', 1)"\r\n                [showMeridian]="model.meridian"\r\n                [showSeconds]="model.showSeconds"\r\n                [showSpinners]="model.getAdditional(\'spinners\', true)"></timepicker>\r\n\r\n</ng-container>',changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={bindId:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}],bsTimePicker:[{type:a.ViewChild,args:[i.TimepickerComponent]}]},e}(n.DynamicFormControlComponent),R=this&&this.__extends||(h=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}h(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),N=function(r){function e(e,t,n){var o=r.call(this,e,t,n)||this;return o.componentFactoryResolver=e,o.layoutService=t,o.validationService=n,o.asBootstrapFormGroup=!0,o.bindId=!0,o.context=null,o.blur=new a.EventEmitter,o.change=new a.EventEmitter,o.focus=new a.EventEmitter,o.customEvent=new a.EventEmitter,o}return R(e,r),Object.defineProperty(e.prototype,"componentType",{get:function(){return this.layoutService.getCustomComponentType(this.model)||$(this.model)},enumerable:!0,configurable:!0}),e.decorators=[{type:a.Component,args:[{selector:"dynamic-bootstrap-form-control",template:'<div [class.form-group]="asBootstrapFormGroup || getClass(\'element\', \'container\').includes(\'form-group\')"\r\n     [class.has-error]="showErrorMessages"\r\n     [formGroup]="group"\r\n     [ngClass]="[getClass(\'element\', \'container\'), getClass(\'grid\', \'container\')]">\r\n\r\n    <label *ngIf="!isCheckbox && hasLabel"\r\n           [for]="model.id"\r\n           [innerHTML]="model.label"\r\n           [ngClass]="[getClass(\'element\', \'label\'), getClass(\'grid\', \'label\')]"></label>\r\n\r\n    <ng-container *ngTemplateOutlet="startTemplate?.templateRef; context: model"></ng-container>\r\n\r\n    <div [ngClass]="getClass(\'grid\', \'control\')">\r\n\r\n        <ng-container #componentViewContainer></ng-container>\r\n\r\n        <span *ngIf="hasHint" class="help-block" [innerHTML]="model.hint"\r\n              [ngClass]="getClass(\'element\', \'hint\')"></span>\r\n\r\n    </div>\r\n\r\n    <ul *ngIf="showErrorMessages" class="has-error"\r\n        [ngClass]="[getClass(\'element\', \'errors\'), getClass(\'grid\', \'errors\')]">\r\n\r\n        <li *ngFor="let message of errorMessages" class="help-block">{{ message }}</li>\r\n\r\n    </ul>\r\n\r\n    <ng-container *ngTemplateOutlet="endTemplate?.templateRef; context: model"></ng-container>\r\n\r\n    <ng-content></ng-content>\r\n\r\n</div>'}]}],e.ctorParameters=function(){return[{type:a.ComponentFactoryResolver},{type:n.DynamicFormLayoutService},{type:n.DynamicFormValidationService}]},e.propDecorators={contentTemplateList:[{type:a.ContentChildren,args:[n.DynamicTemplateDirective]}],inputTemplateList:[{type:a.Input,args:["templates"]}],asBootstrapFormGroup:[{type:a.Input}],bindId:[{type:a.Input}],context:[{type:a.Input}],group:[{type:a.Input}],layout:[{type:a.Input}],model:[{type:a.Input}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}],customEvent:[{type:a.Output,args:["bsEvent"]}],componentViewContainerRef:[{type:a.ViewChild,args:["componentViewContainer",{read:a.ViewContainerRef}]}]},e}(n.DynamicFormControlContainerComponent);function $(e){switch(e.type){case n.DYNAMIC_FORM_CONTROL_TYPE_ARRAY:return I;case n.DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:return C;case n.DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:return D;case n.DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:return _;case n.DYNAMIC_FORM_CONTROL_TYPE_GROUP:return D;case n.DYNAMIC_FORM_CONTROL_TYPE_INPUT:return F;case n.DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:return S;case n.DYNAMIC_FORM_CONTROL_TYPE_SELECT:return T;case n.DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:return k;case n.DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:return A;default:return null}}var B,j=this&&this.__extends||(B=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}B(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),G=function(o){function e(e,t){var n=o.call(this,e,t)||this;return n.formService=e,n.layoutService=t,n.blur=new a.EventEmitter,n.change=new a.EventEmitter,n.focus=new a.EventEmitter,n.customEvent=new a.EventEmitter,n}return j(e,o),e.decorators=[{type:a.Component,args:[{selector:"dynamic-bootstrap-form",template:'<dynamic-bootstrap-form-control *ngFor="let model of formModel; trackBy: trackByFn"\r\n                                [group]="formGroup"\r\n                                [hidden]="model.hidden"\r\n                                [layout]="formLayout"\r\n                                [model]="model"\r\n                                [ngClass]="[getClass(model,\'element\',\'host\'), getClass(model,\'grid\',\'host\')]"\r\n                                [templates]="templates"\r\n                                (blur)="onEvent($event, \'blur\')"\r\n                                (change)="onEvent($event, \'change\')"\r\n                                (focus)="onEvent($event, \'focus\')"\r\n                                (bsEvent)="onEvent($event, \'custom\')"></dynamic-bootstrap-form-control>'}]}],e.ctorParameters=function(){return[{type:n.DynamicFormService},{type:n.DynamicFormLayoutService}]},e.propDecorators={formGroup:[{type:a.Input,args:["group"]}],formModel:[{type:a.Input,args:["model"]}],formLayout:[{type:a.Input,args:["layout"]}],blur:[{type:a.Output}],change:[{type:a.Output}],focus:[{type:a.Output}],customEvent:[{type:a.Output,args:["bsEvent"]}],templates:[{type:a.ContentChildren,args:[n.DynamicTemplateDirective]}],components:[{type:a.ViewChildren,args:[N]}]},e}(n.DynamicFormComponent),Y=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[o.CommonModule,t.ReactiveFormsModule,r.BsDatepickerModule,i.TimepickerModule,l.TextMaskModule,n.DynamicFormsCoreModule],declarations:[C,_,I,D,F,S,T,k,A,N,G],entryComponents:[C,_,I,D,F,S,T,k,A],exports:[n.DynamicFormsCoreModule,N,G]}]}],e}();e.DynamicBootstrapCheckboxComponent=C,e.DynamicBootstrapDatePickerComponent=_,e.DynamicBootstrapFormArrayComponent=I,e.DynamicBootstrapFormGroupComponent=D,e.DynamicBootstrapInputComponent=F,e.DynamicBootstrapRadioGroupComponent=S,e.DynamicBootstrapSelectComponent=T,e.DynamicBootstrapTextAreaComponent=k,e.DynamicBootstrapTimePickerComponent=A,e.DynamicBootstrapFormComponent=G,e.bootstrapUIFormControlMapFn=$,e.DynamicBootstrapFormControlContainerComponent=N,e.DynamicFormsBootstrapUIModule=Y,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ui-bootstrap.umd.min.js.map
